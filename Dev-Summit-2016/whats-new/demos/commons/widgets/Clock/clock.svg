<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" viewBox="0 0 220 220">
  <style>
    /*
    svg * {
        transition: fill .1s ease-out, opacity .1s ease-out;
    }
    @media all and (max-width: 250px) {
        #curved_bg { opacity: 0; }
        #secondary_content, #primary_content { fill: #195463; }
    }
    @media all and (max-width: 200px) {
        #secondary_content {
            opacity: 0;
        }
    }
    @media all and (max-width: 150px) {
        #inner-circle, #middle-circle {
            opacity: 0;
        }
    }
    */
    @media all and (max-width: 150px) {
      .smallTick {
        display: none;
      }
      .label {
        display: none;
      }
      #liveButton {
        display: none;
      }
    }

    .back {
      fill: rgba(0, 0, 0, 0.5);
      filter: url(#backDropShadow);
    }

    .bigTick {
      fill: rgba(255, 255, 255, 0.5);
    }

    .smallTick {
      fill: rgba(255, 255, 255, 0.5);
    }
    
    .minutesPointerFill {
      fill: #FDB462;
    }

    .pointer {
      cursor: pointer;
    }

    svg[data-mode="live"] .pointer {
      transition: transform 0.2s ease;
    }

    .hours > * {
      fill: #1F78B4;
    }

    .minutes > * {
      fill: #2086CA;
    }

    .seconds > * {
      fill: #CBE5F7;
    }

    .label {
      width: 50px;
      text-anchor: middle;
      font-family: Arial;
      fill: #CBE5F7;
      font-weight: bold;
      font-size: 10px;
    }

    .label.shadow {
      fill: gray;
    }

    #liveButton {
      cursor: pointer;
    }
    #liveButton > rect {
      fill: url(#liveButtonGradient);
    }
    #liveButton:hover > rect {
      fill: url(#hoverLiveButtonGradient);
    }
    #liveButton:active > rect {
      fill: url(#activeLiveButtonGradient);
    }
    svg[data-mode="live"] #liveButton > rect {
      fill: url(#selectedLiveButtonGradient);
    }

    #liveButton > text {
      text-anchor: middle;
      font-family: Arial;
      fill: white;
      font-size: 8px;
    }
    text {
      pointer-events: none;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
    }

  </style>

  <defs>
    <filter id="backDropShadow" x="-10" y="-10" width="220" height="220">
      <feGaussianBlur in="SourceAlpha" stdDeviation="8" result="backDropShadow-blur" />
      <feOffset in="blur" dx="0" dy="1" result="backDropShadow-offsetBlur" />
      <feFlood flood-color="rbg(0,0,0)" flood-opacity="0.25" result="backDropShadow-offsetColor" />
      <feComposite in="backDropShadow-offsetColor" in2="backDropShadow-offsetBlur" operator="in" result="backDropShadow-offsetBlur" />
      <feMerge>
          <feMergeNode />
          <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>

    <filter id="ticksDropShadow" x="-10" y="-10" width="220" height="220">
      <feGaussianBlur in="SourceAlpha" stdDeviation="2" result="ticksDropShadow-blur" />
      <feOffset in="blur" dx="0" dy="1" result="ticksDropShadow-offsetBlur" />
      <feFlood flood-color="rbga(0,0,0)" flood-opacity="0.25" result="ticksDropShadow-offsetColor" />
      <feComposite in="ticksDropShadow-offsetColor" in2="ticksDropShadow-offsetBlur" operator="in" result="ticksDropShadow-offsetBlur" />
      <feMerge>
          <feMergeNode />
          <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>

    <filter id="pointerDropShadow" x="-10" y="-10" width="220" height="220">
      <feGaussianBlur in="SourceAlpha" stdDeviation="2" result="pointerDropShadow-blur" />
      <feOffset in="blur" dx="0" dy="1" result="pointerDropShadow-offsetBlur" />
      <feFlood flood-color="rbga(0,0,0)" flood-opacity="0.25" result="pointerDropShadow-offsetColor" />
      <feComposite in="pointerDropShadow-offsetColor" in2="pointerDropShadow-offsetBlur" operator="in" result="pointerDropShadow-offsetBlur" />
      <feMerge>
          <feMergeNode />
          <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>

    <mask id="pointerHoursMask">
      <rect x="-5" y="-50" width="10" height="60" fill="white" />
      <circle cx="0" cy="-55" r="10" fill="white"/>
      <circle cx="0" cy="-55" r="5" fill="black"/>
    </mask>
    
    <mask id="pointerMinutesMask">
      <rect x="-3.75" y="-80" width="7.5" height="90" fill="white" />     
      <circle cx="0" cy="-70" r="7.5" fill="white" />
      <circle cx="0" cy="-70" r="5" fill="black" />
    </mask>
    
    <linearGradient id="liveButtonGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#BBBDBD; stop-opacity:0.85" />
      <stop offset="100%" style="stop-color:#9FA0A1; stop-opacity:0.85" />
    </linearGradient>
    <linearGradient id="hoverLiveButtonGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#BBBDBD; stop-opacity:0.85" />
      <stop offset="100%" style="stop-color:#9FA0A1; stop-opacity:0.85" />
    </linearGradient>
    <linearGradient id="activeLiveButtonGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#AAAAAA; stop-opacity:0.85" />
      <stop offset="100%" style="stop-color:#929496; stop-opacity:0.85" />
    </linearGradient>

    <linearGradient id="selectedLiveButtonGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#D85B5B; stop-opacity:0.85" />
      <stop offset="100%" style="stop-color:#D83C3C; stop-opacity:0.85" />
    </linearGradient>
  </defs>

  <g transform="translate(10 10)">

    <circle class="back" cx="100" cy="100" r="100"></circle>

    <g class="ticks" transform="translate(100 100)">
      <!--
        Big ticks: 12-3-6-9
       -->

      <g transform="rotate(0 0 0)">
        <rect class="bigTick" x="-5" y="-100" width="10" height="20" />
      </g>

      <g transform="rotate(90 0 0)">
        <rect class="bigTick" x="-5" y="-100" width="10" height="20" />
      </g>

      <g transform="rotate(180 0 0)">
        <rect class="bigTick" x="-5" y="-100" width="10" height="20" />
      </g>

      <g transform="rotate(270 0 0)">
        <rect class="bigTick" x="-5" y="-100" width="10" height="20" />
      </g>

      <!--
        Small ticks: 1-2-4-5-7-8-10-11
      -->

      <g transform="rotate(30 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
      <g transform="rotate(60 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
      <g transform="rotate(120 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
      <g transform="rotate(150 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
      <g transform="rotate(210 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
      <g transform="rotate(240 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
      <g transform="rotate(300 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
      <g transform="rotate(330 0 0)">
        <rect class="smallTick" x="-2.5" y="-100" width="5" height="10" />
      </g>
    </g>

    <g id="liveButton" transform="translate(100, 170)">
      <rect rx="2" ry="2" x="-15" y="-9" width="30" height="16" />
      <text alignment-baseline="middle">
        LIVE
      </text>
    </g>

    <!--
      Labels
    -->
    
    <g transform="translate(150, 100)">
      <g transform="translate(0, -6)">
        <!--
        <text class="label shadow" x="1" y="1" alignment-baseline="middle">
          10:09
        </text>
        -->
        <text id="timeLabel" class="label" alignment-baseline="middle">
          10:09
        </text>
      </g>

      <g transform="translate(0, 6)">
        <!--
        <text class="label shadow" x="1" y="1"  alignment-baseline="middle">
          AM
        </text>
        -->
        <text id="ampmLabel" class="label" x="0" y="0"  alignment-baseline="middle">
          AM
        </text>
      </g>
    </g>


    <!--
      Pointers
    -->
    
    <g class="pointers" transform="translate(100 100)">
      <g filter="url(#pointerDropShadow)">
        <g id="pointerHours" class="pointer hours"  mask="url(#pointerHoursMask)">
          <rect x="-5" y="-50" width="10" height="60" />
          <circle fill="red" cx="0" cy="-55" r="10"/>
        </g>
      </g>

      <g filter="url(#pointerDropShadow)">
        <g id="pointerMinutes" class="pointer minutes" mask="url(#pointerMinutesMask)">
          <rect x="-3.75" y="-80" width="7.5" height="90" />     
          <circle fill="red" cx="0" cy="-70" r="7.5"/>
        </g>
      </g>

      <g filter="url(#pointerDropShadow)">
        <g id="pointerSeconds" class="pointer seconds">
          <rect x="-1" y="-90" width="2" height="100" />
          <rect x="-2" width="4" height="20" />
          <circle r="6" />
        </g>
      </g>
    </g>

  </g>

  <script type="text/ecmascript" xlink:href="./param.js" />

</svg>